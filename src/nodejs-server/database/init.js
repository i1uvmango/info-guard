const { PrismaClient } = require('@prisma/client');
const db = require('./connection');
const { seedData } = require('./seeds/seedData');

const prisma = new PrismaClient();

async function initializeDatabase() {
    try {
        console.log('üîß Initializing Info-Guard database...');
        
        // 1. Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÌôïÏù∏
        console.log('üì° Testing database connection...');
        await db.connect();
        console.log('‚úÖ Database connection established');
        
        // 2. Prisma ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÉùÏÑ±
        console.log('üî® Generating Prisma client...');
        await prisma.$connect();
        console.log('‚úÖ Prisma client generated');
        
        // 3. Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïä§ÌÇ§Îßà ÎèôÍ∏∞Ìôî
        console.log('üîÑ Syncing database schema...');
        await prisma.$executeRaw`SELECT 1`;
        console.log('‚úÖ Database schema synced');
        
        // 4. ÏãúÎìú Îç∞Ïù¥ÌÑ∞ ÏÇΩÏûÖ
        console.log('üå± Inserting seed data...');
        await seedData();
        console.log('‚úÖ Seed data inserted');
        
        // 5. Ï¥àÍ∏∞ ÌÜµÍ≥Ñ ÌôïÏù∏
        console.log('üìä Checking initial statistics...');
        const analysisCount = await prisma.analysisResult.count();
        const channelCount = await prisma.channel.count();
        const feedbackCount = await prisma.userFeedback.count();
        
        console.log(`üìà Initial statistics:`);
        console.log(`   - Analysis Results: ${analysisCount}`);
        console.log(`   - Channels: ${channelCount}`);
        console.log(`   - User Feedbacks: ${feedbackCount}`);
        
        console.log('üéâ Database initialization completed successfully!');
        
    } catch (error) {
        console.error('‚ùå Database initialization failed:', error);
        throw error;
    } finally {
        await prisma.$disconnect();
        await db.disconnect();
    }
}

// Ïä§ÌÅ¨Î¶ΩÌä∏Í∞Ä ÏßÅÏ†ë Ïã§ÌñâÎê† ÎïåÎßå Ïã§Ìñâ
if (require.main === module) {
    initializeDatabase()
        .then(() => {
            console.log('‚úÖ Database initialization completed');
            process.exit(0);
        })
        .catch((error) => {
            console.error('‚ùå Database initialization failed:', error);
            process.exit(1);
        });
}

module.exports = { initializeDatabase }; 